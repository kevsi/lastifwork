{% extends 'base.html.twig' %}

{% block title %}Groupes de travail - Système de Gestion Documentaire{% endblock %}

{% block body %}
    {% include "aside.html.twig" %}

    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">
        {# Inclure la barre de navigation #}
        {% include "navbar.html.twig" %}
        
        <div class="container-fluid py-2">
            <div class="row">
                <div class="col-12">
                    <div class="card my-4">
                        {# En-tête de la carte #}
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                            <div class="bg-gradient-dark shadow-dark border-radius-lg pt-4 pb-3 d-flex justify-content-between align-items-center">
                                <h6 class="text-white text-capitalize ps-3">Groupes de travail</h6>
                                <div class="pe-3">
                                    <a href="{{path('app_workspace_create')}}" class="btn btn-sm btn-white">Créer un groupe</a>
                                    <a href="{{path('app_workspace_create')}}" class="btn btn-sm btn-white">Rejoindre un groupe</a>

                                </div>
                            </div>
                        </div>
                        
                        {# Corps de la carte #}
                        <div class="card-body px-3 pt-3 pb-2">
                            {# SIMULATION DE DONNÉES: Changer cette variable pour simuler l'absence ou la présence de groupes #}
                            {% set hasGroups = true %}
                            
                            {# SIMULATION: Création de données factices pour les groupes #}
                            {% set userGroups = [] %}
                            
                            {% if hasGroups %}
                                {% set userGroups = [
                                    {
                                        'id': 1,
                                        'name': 'Équipe Marketing',
                                        'description': 'Groupe de travail pour les projets marketing',
                                        'isOwner': true,
                                        'createdAt': '2023-12-15',
                                        'members': [
                                            {'fullName': 'Marie Dupont', 'initials': 'MD'},
                                            {'fullName': 'Jean Martin', 'initials': 'JM'},
                                            {'fullName': 'Sophie Bernard', 'initials': 'SB'},
                                            {'fullName': 'Lucas Petit', 'initials': 'LP'},
                                            {'fullName': 'Emma Legrand', 'initials': 'EL'},
                                            {'fullName': 'Thomas Durand', 'initials': 'TD'}
                                        ]
                                    },
                                    {
                                        'id': 2,
                                        'name': 'Projet Innovation',
                                        'description': 'Développement des nouvelles fonctionnalités',
                                        'isOwner': false,
                                        'createdAt': '2024-01-23',
                                        'members': [
                                            {'fullName': 'Paul Richard', 'initials': 'PR'},
                                            {'fullName': 'Camille Leroy', 'initials': 'CL'},
                                            {'fullName': 'Alexandre Morel', 'initials': 'AM'}
                                        ]
                                    },
                                    {
                                        'id': 3,
                                        'name': 'Documentation technique',
                                        'description': 'Gestion des documents techniques du projet principal',
                                        'isOwner': true,
                                        'createdAt': '2024-02-10',
                                        'members': [
                                            {'fullName': 'Julie Lambert', 'initials': 'JL'},
                                            {'fullName': 'Marc Fournier', 'initials': 'MF'},
                                            {'fullName': 'Élodie Girard', 'initials': 'EG'},
                                            {'fullName': 'Adrien Blanc', 'initials': 'AB'}
                                        ]
                                    }
                                ] %}
                            {% endif %}
                            
                            {% if userGroups is empty %}
                                {# Message affiché si l'utilisateur n'a pas de groupe #}
                                <div class="text-center py-5">
                                    <div class="icon icon-lg icon-shape bg-gradient-info shadow-info text-center border-radius-xl mt-n4 mb-3 mx-auto">
                                        <i class="material-icons opacity-10">group</i>
                                    </div>
                                    <h4>Vous n'avez pas de groupe de travail</h4>
                                    <p class="text-secondary">Les groupes de travail permettent de collaborer sur des documents et des projets</p>
                                    <a href="{{path('app_groupe_create')}}" class="btn btn-info mt-3">
                                        <i class="material-icons opacity-10 me-2">add</i>
                                        Créer un groupe
                                    </a>
                                </div>
                            {% else %}
                                {# Affichage des groupes si l'utilisateur en a #}
                                <div class="table-responsive">
                                    <table class="table align-items-center mb-0">
                                        <thead>
                                            <tr>
                                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Nom du groupe</th>
                                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Description</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Membres</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date de création</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for group in userGroups %}
                                                <tr>
                                                    <td>
                                                        <div class="d-flex px-2 py-1">
                                                            <div class="icon-document me-3">
                                                                <i class="material-icons text-info">group</i>
                                                            </div>
                                                            <div class="d-flex flex-column justify-content-center">
                                                                <h6 class="mb-0 text-sm">{{ group.name }}</h6>
                                                                <p class="text-xs text-secondary mb-0">{% if group.isOwner %}(Propriétaire){% endif %}</p>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <p class="text-xs font-weight-bold mb-0">{{ group.description }}</p>
                                                    </td>
                                                    <td class="align-middle text-center">
                                                        <div class="avatar-group">
                                                            {% for member in group.members|slice(0, 4) %}
                                                                {# Attribution de couleurs fixes selon la position dans la liste au lieu de random #}
                                                                {% set colorClasses = ['primary', 'success', 'info', 'warning', 'danger'] %}
                                                                {% set colorIndex = loop.index0 % 5 %}
                                                                <span class="avatar avatar-xs rounded-circle bg-gradient-{{ colorClasses[colorIndex] }}" data-bs-toggle="tooltip" data-bs-placement="bottom" title="{{ member.fullName }}">
                                                                    {{ member.initials }}
                                                                </span>
                                                            {% endfor %}
                                                            
                                                            {% if group.members|length > 4 %}
                                                                <span class="avatar avatar-xs rounded-circle bg-gray" data-bs-toggle="tooltip" data-bs-placement="bottom" title="{{ group.members|length - 4 }} membres supplémentaires">
                                                                    +{{ group.members|length - 4 }}
                                                                </span>
                                                            {% endif %}
                                                        </div>
                                                    </td>
                                                    <td class="align-middle text-center">
                                                        <span class="text-secondary text-xs font-weight-bold">{{ group.createdAt|date('d/m/Y') }}</span>
                                                    </td>
                                                    <td class="align-middle text-center">
                                                        <div class="btn-group" role="group">
                                                            <a href="" class="btn btn-sm btn-info" data-bs-toggle="tooltip" title="Voir">
                                                                <i class="material-icons">visibility</i>
                                                            </a>
                                                            {% if group.isOwner %}
                                                                <a href="" class="btn btn-sm btn-warning" data-bs-toggle="tooltip" title="Modifier">
                                                                    <i class="material-icons">edit</i>
                                                                </a>
                                                                <a href="" class="btn btn-sm btn-danger" data-bs-toggle="tooltip" title="Supprimer" onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce groupe ?')">
                                                                    <i class="material-icons">delete</i>
                                                                </a>
                                                            {% endif %}
                                                        </div>
                                                    </td>
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    
    {# Configurateur du thème #}
    <div class="fixed-plugin">
        <a class="fixed-plugin-button text-dark position-fixed px-3 py-2">
            <i class="material-symbols-rounded py-2">settings</i>
        </a>
        <div class="card shadow-lg">
            <div class="card-header pb-0 pt-3">
                <div class="float-start">
                    <h5 class="mt-3 mb-0">Paramètres d'affichage</h5>
                    <p>Personnalisez l'interface</p>
                </div>
                <div class="float-end mt-4">
                    <button class="btn btn-link text-dark p-0 fixed-plugin-close-button">
                        <i class="material-symbols-rounded">clear</i>
                    </button>
                </div>
            </div>
            <hr class="horizontal dark my-1">
            <div class="card-body pt-sm-3 pt-0">
                {# Couleurs de la barre latérale #}
                <div>
                    <h6 class="mb-0">Couleur du menu</h6>
                </div>
                <a href="javascript:void(0)" class="switch-trigger background-color">
                    <div class="badge-colors my-2 text-start">
                        <span class="badge filter bg-gradient-primary" data-color="primary" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-dark active" data-color="dark" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-info" data-color="info" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-success" data-color="success" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-warning" data-color="warning" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-danger" data-color="danger" onclick="sidebarColor(this)"></span>
                    </div>
                </a>
                
                {# Type de barre latérale #}
                <div class="mt-3">
                    <h6 class="mb-0">Type de menu</h6>
                    <p class="text-sm">Choisissez le style de la barre latérale.</p>
                </div>
                <div class="d-flex">
                    <button class="btn bg-gradient-dark px-3 mb-2" data-class="bg-gradient-dark" onclick="sidebarType(this)">Sombre</button>
                    <button class="btn bg-gradient-dark px-3 mb-2 ms-2" data-class="bg-transparent" onclick="sidebarType(this)">Transparent</button>
                    <button class="btn bg-gradient-dark px-3 mb-2 active ms-2" data-class="bg-white" onclick="sidebarType(this)">Clair</button>
                </div>
                <p class="text-sm d-xl-none d-block mt-2">Vous pouvez changer le type de menu uniquement sur ordinateur.</p>
                
                {# Barre de navigation fixe #}
                <div class="mt-3 d-flex">
                    <h6 class="mb-0">Barre de navigation fixe</h6>
                    <div class="form-check form-switch ps-0 ms-auto my-auto">
                        <input class="form-check-input mt-1 ms-auto" type="checkbox" id="navbarFixed" onclick="navbarFixed(this)">
                    </div>
                </div>
                <hr class="horizontal dark my-3">
                
                {# Mode clair/sombre #}
                <div class="mt-2 d-flex">
                    <h6 class="mb-0">Clair / Sombre</h6>
                    <div class="form-check form-switch ps-0 ms-auto my-auto">
                        <input class="form-check-input mt-1 ms-auto" type="checkbox" id="dark-version" onclick="darkMode(this)">
                    </div>
                </div>
            </div>
        </div>
    </div>
    {# Scripts #}
    <script src="{{ asset('assets/js/core/popper.min.js') }}"></script>
    <script src="{{ asset('assets/js/core/bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/js/plugins/perfect-scrollbar.min.js') }}"></script>
    <script src="{{ asset('assets/js/plugins/smooth-scrollbar.min.js') }}"></script>
    <script>
        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }
        
        // Initialiser les tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });
    </script>
{% endblock %}